{"seeAlsoSections":[{"title":"Initializing the System","identifiers":["doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LoggingSystem","doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/MultiplexLogHandler","doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/Identification"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LogHandler"}],"title":"LogHandler","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:14UnifiedLogging10LogHandlerP","modules":[{"name":"UnifiedLogging"}],"navigatorTitle":[{"kind":"identifier","text":"LogHandler"}]},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" is an implementation of a logging backend."}],"sections":[],"identifier":{"url":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/UnifiedLogging\/s8SendableP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/MultiplexLogHandler","doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/StreamLogHandler","doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/SwiftLogNoOpLogHandler"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"hierarchy":{"paths":[["doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler\/logLevel","doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler\/metadata","doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler\/metadataProvider-45be1"]},{"title":"Instance Methods","identifiers":["doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler\/log(level:message:metadata:file:function:line:)-8zwyx","doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler\/log(level:message:metadata:source:file:function:line:)-7qavm","doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler\/report(level:error:metadata:source:file:function:line:)","doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler\/trail(level:type:category:message:metadata:source:file:function:line:)"]},{"title":"Subscripts","identifiers":["doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler\/subscript(metadataKey:)"]}],"variants":[{"paths":["\/documentation\/unifiedlogging\/loghandler"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LogHandler"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This type is an implementation detail and should not normally be used, unless implementing your own logging backend."},{"type":"text","text":" "},{"type":"text","text":"To use the SwiftLog API, please refer to the documentation of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/Logger"},{"type":"text","text":"."}]},{"anchor":"Implementation-requirements","level":1,"type":"heading","text":"Implementation requirements"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To implement your own "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" you should respect a few requirements that are necessary so applications work"},{"type":"text","text":" "},{"type":"text","text":"as expected regardless of the selected "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" implementation."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler"},{"type":"text","text":" must be a "},{"type":"codeVoice","code":"struct"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The metadata and "},{"type":"codeVoice","code":"logLevel"},{"type":"text","text":" properties must be implemented so that setting them on a "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" does not affect"},{"type":"text","text":" "},{"type":"text","text":"other "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":"s."}]}]}]},{"anchor":"Treat-log-level--metadata-as-values","level":3,"type":"heading","text":"Treat log level & metadata as values"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When developing your "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":", please make sure the following test works."}]},{"type":"codeListing","syntax":"swift","code":["LoggingSystem.bootstrap(MyLogHandler.init) \/\/ your LogHandler might have a different bootstrapping step","var logger1 = Logger(identification: .PEDPadoraRating)","logger1.logLevel = .debug","logger1[metadataKey: \"only-on\"] = \"first\"","","var logger2 = logger1","logger2.logLevel = .error                  \/\/ this must not override `logger1`'s log level","logger2[metadataKey: \"only-on\"] = \"second\" \/\/ this must not override `logger1`'s metadata","","XCTAssertEqual(.debug, logger1.logLevel)","XCTAssertEqual(.error, logger2.logLevel)","XCTAssertEqual(\"first\", logger1[metadataKey: \"only-on\"])","XCTAssertEqual(\"second\", logger2[metadataKey: \"only-on\"])"]},{"anchor":"Special-cases","level":3,"type":"heading","text":"Special cases"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In certain special cases, the log level behaving like a value on "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" might not be what you want. For example,"},{"type":"text","text":" "},{"type":"text","text":"you might want to set the log level across "},{"type":"emphasis","inlineContent":[{"type":"text","text":"all"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":"s to "},{"type":"codeVoice","code":".debug"},{"type":"text","text":" when say a signal (eg. "},{"type":"codeVoice","code":"SIGUSR1"},{"type":"text","text":") is received"},{"type":"text","text":" "},{"type":"text","text":"to be able to debug special failures in production. This special case is acceptable but we urge you to create a"},{"type":"text","text":" "},{"type":"text","text":"solution specific to your "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" implementation to achieve that. Please find an example implementation of this"},{"type":"text","text":" "},{"type":"text","text":"behavior below, on reception of the signal you would call"},{"type":"text","text":" "},{"type":"codeVoice","code":"LogHandlerWithGlobalLogLevelOverride.overrideGlobalLogLevel = .debug"},{"type":"text","text":", for example."}]},{"type":"codeListing","syntax":"swift","code":["import class Foundation.NSLock","","public struct LogHandlerWithGlobalLogLevelOverride: LogHandler {","    \/\/ the static properties hold the globally overridden log level (if overridden)","    private static let overrideLock = NSLock()","    private static var overrideLogLevel: Logger.Level? = nil","","    \/\/ this holds the log level if not overridden","    private var _logLevel: Logger.Level = .info","","    \/\/ metadata storage","    public var metadata: Logger.Metadata = [:]","","    public init(identification: Identification) {","        \/\/ [...]","    }","","    public var logLevel: Logger.Level {","        \/\/ when we get asked for the log level, we check if it was globally overridden or not","        get {","            LogHandlerWithGlobalLogLevelOverride.overrideLock.lock()","            defer { LogHandlerWithGlobalLogLevelOverride.overrideLock.unlock() }","            return LogHandlerWithGlobalLogLevelOverride.overrideLogLevel ?? self._logLevel","        }","        \/\/ we set the log level whenever we're asked (note: this might not have an effect if globally","        \/\/ overridden)","        set {","            self._logLevel = newValue","        }","    }","","    public func log(level: Logger.Level, message: Logger.Message, metadata: Logger.Metadata?,","                    source: String, file: String, function: String, line: UInt) {","        \/\/ [...]","    }","","    public subscript(metadataKey metadataKey: String) -> Logger.Metadata.Value? {","        get {","            return self.metadata[metadataKey]","        }","        set(newValue) {","            self.metadata[metadataKey] = newValue","        }","    }","","    \/\/ this is the function to globally override the log level, it is not part of the `LogHandler` protocol","    public static func overrideGlobalLogLevel(_ logLevel: Logger.Level) {","        LogHandlerWithGlobalLogLevelOverride.overrideLock.lock()","        defer { LogHandlerWithGlobalLogLevelOverride.overrideLock.unlock() }","        LogHandlerWithGlobalLogLevelOverride.overrideLogLevel = logLevel","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Please note that the above "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" will still pass the ‘log level is a value’ test above it iff the global log"},{"type":"text","text":" "},{"type":"text","text":"level has not been overridden. And most importantly it passes the requirement listed above: A change to the log"},{"type":"text","text":" "},{"type":"text","text":"level on one "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" should not affect the log level of another "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" variable."}]}]}],"references":{"doc://UnifiedLogging/documentation/UnifiedLogging/LogHandler/metadataProvider-45be1":{"defaultImplementations":1,"role":"symbol","title":"metadataProvider","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"metadataProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:14UnifiedLogging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MetadataProvider","preciseIdentifier":"s:14UnifiedLogging6LoggerV16MetadataProviderV"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"The metadata provider this "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" will use when a log statement is about to be emitted."}],"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler\/metadataProvider-45be1","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/unifiedlogging\/loghandler\/metadataprovider-45be1"},"doc://UnifiedLogging/documentation/UnifiedLogging/LoggingSystem":{"role":"symbol","title":"LoggingSystem","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoggingSystem"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"LoggingSystem"},{"type":"text","text":" is a global facility where the default logging backend implementation ("},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":") can be"},{"type":"text","text":" "},{"type":"text","text":"configured. "},{"type":"codeVoice","code":"LoggingSystem"},{"type":"text","text":" is set up just once in a given program to set up the desired logging backend"},{"type":"text","text":" "},{"type":"text","text":"implementation."}],"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LoggingSystem","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LoggingSystem"}],"url":"\/documentation\/unifiedlogging\/loggingsystem"},"doc://UnifiedLogging/documentation/UnifiedLogging/MultiplexLogHandler":{"role":"symbol","title":"MultiplexLogHandler","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultiplexLogHandler"}],"abstract":[{"type":"text","text":"A pseudo-"},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" that can be used to send messages to multiple other "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":"s."}],"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/MultiplexLogHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MultiplexLogHandler"}],"url":"\/documentation\/unifiedlogging\/multiplexloghandler"},"doc://UnifiedLogging/documentation/UnifiedLogging/LogHandler/log(level:message:metadata:file:function:line:)-8zwyx":{"defaultImplementations":1,"deprecated":true,"role":"symbol","title":"log(level:message:metadata:file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"log"},{"kind":"text","text":"("},{"kind":"externalParam","text":"level"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:14UnifiedLogging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Level","preciseIdentifier":"s:14UnifiedLogging6LoggerV5LevelO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:14UnifiedLogging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Message","preciseIdentifier":"s:14UnifiedLogging6LoggerV7MessageV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"metadata"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:14UnifiedLogging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Metadata","preciseIdentifier":"s:14UnifiedLogging6LoggerV8Metadataa"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"SwiftLog 1.0 compatibility method. Please do "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" implement, implement"},{"type":"text","text":" "},{"type":"codeVoice","code":"log(level:message:metadata:source:file:function:line:)"},{"type":"text","text":" instead."}],"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler\/log(level:message:metadata:file:function:line:)-8zwyx","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/unifiedlogging\/loghandler\/log(level:message:metadata:file:function:line:)-8zwyx"},"doc://UnifiedLogging/documentation/UnifiedLogging/LogHandler/report(level:error:metadata:source:file:function:line:)":{"role":"symbol","title":"report(level:error:metadata:source:file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"report"},{"kind":"text","text":"("},{"kind":"externalParam","text":"level"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:14UnifiedLogging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Level","preciseIdentifier":"s:14UnifiedLogging6LoggerV5LevelO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NonFatalError","preciseIdentifier":"s:14UnifiedLogging13NonFatalErrorP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"metadata"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:14UnifiedLogging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Metadata","preciseIdentifier":"s:14UnifiedLogging6LoggerV8Metadataa"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"This method is called when a "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" must emit a report error. There is no need for the "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"check if the "},{"type":"codeVoice","code":"level"},{"type":"text","text":" is above or below the configured "},{"type":"codeVoice","code":"logLevel"},{"type":"text","text":" as "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" already performed this check and"},{"type":"text","text":" "},{"type":"text","text":"determined that a message should be logged."}],"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler\/report(level:error:metadata:source:file:function:line:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/unifiedlogging\/loghandler\/report(level:error:metadata:source:file:function:line:)"},"doc://UnifiedLogging/documentation/UnifiedLogging/LogHandler/log(level:message:metadata:source:file:function:line:)-7qavm":{"defaultImplementations":1,"role":"symbol","title":"log(level:message:metadata:source:file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"log"},{"kind":"text","text":"("},{"kind":"externalParam","text":"level"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:14UnifiedLogging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Level","preciseIdentifier":"s:14UnifiedLogging6LoggerV5LevelO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:14UnifiedLogging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Message","preciseIdentifier":"s:14UnifiedLogging6LoggerV7MessageV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"metadata"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:14UnifiedLogging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Metadata","preciseIdentifier":"s:14UnifiedLogging6LoggerV8Metadataa"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"This method is called when a "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" must emit a log message. There is no need for the "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"check if the "},{"type":"codeVoice","code":"level"},{"type":"text","text":" is above or below the configured "},{"type":"codeVoice","code":"logLevel"},{"type":"text","text":" as "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" already performed this check and"},{"type":"text","text":" "},{"type":"text","text":"determined that a message should be logged."}],"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler\/log(level:message:metadata:source:file:function:line:)-7qavm","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/unifiedlogging\/loghandler\/log(level:message:metadata:source:file:function:line:)-7qavm"},"doc://UnifiedLogging/documentation/UnifiedLogging/LogHandler":{"role":"symbol","title":"LogHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LogHandler"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" is an implementation of a logging backend."}],"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LogHandler"}],"url":"\/documentation\/unifiedlogging\/loghandler"},"doc://UnifiedLogging/documentation/UnifiedLogging/SwiftLogNoOpLogHandler":{"role":"symbol","title":"SwiftLogNoOpLogHandler","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwiftLogNoOpLogHandler"}],"abstract":[{"type":"text","text":"No operation LogHandler, used when no logging is required"}],"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/SwiftLogNoOpLogHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SwiftLogNoOpLogHandler"}],"url":"\/documentation\/unifiedlogging\/swiftlognooploghandler"},"doc://UnifiedLogging/documentation/UnifiedLogging/LogHandler/trail(level:type:category:message:metadata:source:file:function:line:)":{"role":"symbol","title":"trail(level:type:category:message:metadata:source:file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trail"},{"kind":"text","text":"("},{"kind":"externalParam","text":"level"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:14UnifiedLogging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Level","preciseIdentifier":"s:14UnifiedLogging6LoggerV5LevelO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TrailType","preciseIdentifier":"s:14UnifiedLogging9TrailTypeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"category"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:14UnifiedLogging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Message","preciseIdentifier":"s:14UnifiedLogging6LoggerV7MessageV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"metadata"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:14UnifiedLogging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Metadata","preciseIdentifier":"s:14UnifiedLogging6LoggerV8Metadataa"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Emits a trail event when invoked by a "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":"."}],"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler\/trail(level:type:category:message:metadata:source:file:function:line:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/unifiedlogging\/loghandler\/trail(level:type:category:message:metadata:source:file:function:line:)"},"doc://UnifiedLogging/documentation/UnifiedLogging/LogHandler/logLevel":{"role":"symbol","title":"logLevel","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logLevel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:14UnifiedLogging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Level","preciseIdentifier":"s:14UnifiedLogging6LoggerV5LevelO"}],"abstract":[{"type":"text","text":"Get or set the configured log level."}],"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler\/logLevel","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/unifiedlogging\/loghandler\/loglevel"},"doc://UnifiedLogging/documentation/UnifiedLogging/Logger":{"role":"symbol","title":"Logger","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Logger"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" is the central type in "},{"type":"codeVoice","code":"SwiftLog"},{"type":"text","text":". Its central function is to emit log messages using one of the methods"},{"type":"text","text":" "},{"type":"text","text":"corresponding to a log level."}],"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/Logger","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Logger"}],"url":"\/documentation\/unifiedlogging\/logger"},"doc://UnifiedLogging/documentation/UnifiedLogging/LogHandler/metadata":{"role":"symbol","title":"metadata","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"metadata"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:14UnifiedLogging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Metadata","preciseIdentifier":"s:14UnifiedLogging6LoggerV8Metadataa"}],"abstract":[{"type":"text","text":"Get or set the entire metadata storage as a dictionary."}],"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler\/metadata","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/unifiedlogging\/loghandler\/metadata"},"doc://UnifiedLogging/documentation/UnifiedLogging/LogHandler/subscript(metadataKey:)":{"role":"symbol","title":"subscript(metadataKey:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"externalParam","text":"metadataKey"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:14UnifiedLogging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Metadata","preciseIdentifier":"s:14UnifiedLogging6LoggerV8Metadataa"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:SD5Valuea"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Add, remove, or change the logging metadata."}],"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/LogHandler\/subscript(metadataKey:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/unifiedlogging\/loghandler\/subscript(metadatakey:)"},"doc://UnifiedLogging/documentation/UnifiedLogging":{"role":"collection","title":"UnifiedLogging","abstract":[{"type":"text","text":"A Logging API for Swift and Apple platforms."}],"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging","kind":"symbol","type":"topic","url":"\/documentation\/unifiedlogging"},"doc://UnifiedLogging/documentation/UnifiedLogging/Identification":{"role":"symbol","title":"Identification","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Identification"}],"abstract":[{"type":"text","text":"the "},{"type":"codeVoice","code":"Identification"},{"type":"text","text":" will be use to know the Logger owner,"},{"type":"text","text":" "},{"type":"text","text":"as it is not enough to identify the owner with  single"},{"type":"codeVoice","code":"Label"},{"type":"text","text":" we will use this object to carry"},{"type":"text","text":" "},{"type":"text","text":"enough information to identify Team ,  Library and  Module"},{"type":"text","text":" "},{"type":"text","text":"each LogHandler will have the freedom to use this info as needed, for example"},{"type":"text","text":" "},{"type":"text","text":"the iOSLoggerHandler  will use team & bundle to bootstrap the subsystem and module"},{"type":"text","text":" "},{"type":"text","text":"for category filed from the os.Logger this will give enough visibility to filter logs using"}],"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/Identification","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Identification"}],"url":"\/documentation\/unifiedlogging\/identification"},"doc://UnifiedLogging/documentation/UnifiedLogging/StreamLogHandler":{"role":"symbol","title":"StreamLogHandler","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StreamLogHandler"}],"abstract":[{"type":"codeVoice","code":"StreamLogHandler"},{"type":"text","text":" is a simple implementation of "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" for directing"},{"type":"text","text":" "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" output to either "},{"type":"codeVoice","code":"stderr"},{"type":"text","text":" or "},{"type":"codeVoice","code":"stdout"},{"type":"text","text":" via the factory methods."}],"identifier":"doc:\/\/UnifiedLogging\/documentation\/UnifiedLogging\/StreamLogHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StreamLogHandler"}],"url":"\/documentation\/unifiedlogging\/streamloghandler"},"doc://UnifiedLogging/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/UnifiedLogging\/s8SendableP"}}}